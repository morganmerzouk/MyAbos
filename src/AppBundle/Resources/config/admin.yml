services:
    sonata.admin.skipper:
        class: AppBundle\Admin\SkipperAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Contenu", label: "Skipper" }
        arguments:
            - ~
            - AppBundle\Entity\Skipper
            - ~
        calls:
            - [ setTranslationDomain, [AppBundle]]
            - [ setBaseRouteName, [skipper]]
            - [ setBaseRoutePattern, [skipper]]
    sonata.admin.destination:
        class: AppBundle\Admin\DestinationAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Contenu", label: "Destination" }
        arguments:
            - ~
            - AppBundle\Entity\Destination
            - ~
        calls:
            - [ setTranslationDomain, [AppBundle]]
            - [ setBaseRouteName, [destination]]
            - [ setBaseRoutePattern, [destination]]
    sonata.admin.portdepart:
        class: AppBundle\Admin\PortDepartAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Contenu", label: "Port de départ" }
        arguments:
            - ~
            - AppBundle\Entity\PortDepart
            - ~
        calls:
            - [ setTranslationDomain, [AppBundle]]
            - [ setBaseRouteName, [portdepart]]
            - [ setBaseRoutePattern, [portdepart]]
    sonata.admin.itineraire:
        class: AppBundle\Admin\ItineraireAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Contenu", label: "Itinéraire" }
        arguments:
            - ~
            - AppBundle\Entity\Itineraire
            - ~
        calls:
            - [ setTranslationDomain, [AppBundle]]
            - [ setBaseRouteName, [itineraire]]
            - [ setBaseRoutePattern, [itineraire]]